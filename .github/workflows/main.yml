name: Deploy to RapidAPI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      # Get spec files that have changed
      - name: Get specific changed files
        id: changed-spec-files
        uses: tj-actions/changed-files@v16
        with:
          files: |
            **/*.json

      # print list of files for debug purposes
      - name: List updated spec files
        run: |
          for file in ${{ steps.changed-spec-files.outputs.modified_files }}; do
            echo "$file was modified"
          done 
          
      # Deploy to Heroku
      - name: Deploy to Heroku
        run: echo "Deploy successful"

        # id: deployToHeroku
        # uses: akhileshns/heroku-deploy@v3.12.12
        # with:
        #   heroku_api_key: ${{secrets.HEROKU_API_KEY}}
        #   heroku_app_name: "nameless-depths-63278" #Must be unique in Heroku
        #   heroku_email: "xyzeroding@gmail.com"
          
      # POST to Integration Service
      - name: Post to Integration Layer
        id: postToIntegrationLayer
        #if: steps.changed-spec-files.outputs.any_changed == 'true'
        # You may pin to the exact commit or the version.
        # uses: fjogeleit/http-request-action@d45f6649f63b711b64bcd10e95a600abe4468456
        uses: fjogeleit/http-request-action@v1.9.0
        with:
          url: https://ed5u76i86j.execute-api.us-east-1.amazonaws.com/prod/github
          customHeaders: '{"instance" : "jamie"}'
          method: POST
          contentType: "application/json"
          file: ${{ steps.changed-spec-files.outputs.modified_files }}
          timeout: 100000

      - name: Show Response
        run: echo ${{ steps.postToIntegrationLayer.outputs.response }}    

      # Execute the Integration Tests on RapidAPI 
      # A failed test from RapidAPI will fail the GitHub Action
      - name: Execute Tests
        id: tstExec
        uses: RapidAPI/gh-api-testing-trigger@jeffrapid-patch-1 
        with:
          test: 'test_af62b85b-ab45-4ffc-bae4-d4edbf145028'
          location: 'AWS-US-EAST-1'
          instance: 'jamie.hub.rapidapi'
          #environment: 'ENV_ID(OPTIONAL)'

      - name: Show Testing Results
        run: echo "The test took ${{ steps.tstExec.outputs.time }}ms to run"; echo "The test result was ${{ steps.tstExec.outputs.computedStatus }}"; echo "View Report - ${{ steps.tstExec.outputs.reportUrl }}"
